security:
    encoders:
        App\entity\User:
            algorithm: bcrypt
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory: { memory: ~ }
        in_database:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        admin:
            # tout ce qui commence par /admin fait parti du firewall admin :
            pattern: ^/admin
            # on peut y accéder de façon anonyme pour aller sur le form admin de login :
            anonymous: true
            provider: in_database
            # on a un form login différent :
            form_login:
                login_path: admin_account_login
                check_path: admin_account_login
            logout:
                path: admin_account_logout
                target: home
        main:
            anonymous: true

            provider: in_database
            form_login:
                login_path: account_login
                check_path: account_login

            logout:
                # route pour se déconnecter:
                path: account_logout
                # redirection après déconnexion:
                target: account_login

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/admin/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
         - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
